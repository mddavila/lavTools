## Mardia Test ========================================================================

mardiaTest <- function(data, digits = 3) {

    mardia <- function(data, digits) {
        Skew <- semTools::mardiaSkew(data)
        Kurtosis <- semTools::mardiaKurtosis(data)
        Kurtosis[4] <- Kurtosis[3]
        Kurtosis[3] <- ""
        Kurtosis <- as.numeric(Kurtosis)
        a <- as.data.frame(rbind(Skew, Kurtosis))
        colnames(a) <- c(abbreviate("multivariate", 5), "Statistic", "df", "p.value")
        a <- round(a, digits)
        a$Result <-  ifelse(a$p.value > 0.05, "Yes", "No")
        a
    }
    if (inherits(data, "list") == TRUE) {
        lapply(dat, function(x) mardia(x, digits))
    } else {
        mardia(data, digits)
    }
}

## ParTable Est  ========================================================================

parEst <- function(fit = NULL, std = TRUE, simple = TRUE) {

    parme <- lavaan::parameterEstimates(fit, standardized = std)

    if (simple == TRUE) {
        param <- subset(parme, op == "=~")
        h2 <- param$std.all^2
        u2 <- 1 - h2
        x <- data.frame(h2, u2) ## h2 - Communality; u2 - Uniqueness
        p <- merge(data.frame(parme, row.names=NULL),
                   data.frame(x, row.names=NULL),
                   by = 0, all = TRUE, sort = F)
        p$Row.names <- as.numeric(p$Row.names)
        p <-  p[order(p$Row.names),][-1]
        p[,-c(1:3)] <- round(p[,-c(1:3)],4)
        p   
    } else {
        param <- parme
        h2 <- param$std.all^2
        u2 <- 1 - h2
        p <- cbind(param, h2, u2)
        p[,-c(1:3)] <- round(p[,-c(1:3)],4)
        p
    }
}

## Mod Indicies  ========================================================================

modind <- function(fit, digits) {
    head(lavaan::modificationindices(fit, power = T, sort = T), digits)
}
